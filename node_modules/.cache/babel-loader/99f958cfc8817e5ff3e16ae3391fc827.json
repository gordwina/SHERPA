{"ast":null,"code":"var _jsxFileName = \"/Users/teddyboirin/Desktop/SHERPA/src/components/Informations.js\";\nimport React from 'react';\nimport './Information.scss';\nimport '../style/colors.scss';\nimport '../style/font.scss';\nimport { ResponsiveRadar } from '@nivo/radar';\n\nclass Informations extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"InformationContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"const MyResponsiveRadar = (\", data\n    /* see data tab */\n    , \") => (\", React.createElement(ResponsiveRadar, {\n      data: data,\n      keys: ['chardonay', 'carmenere', 'syrah'],\n      indexBy: \"taste\",\n      maxValue: \"auto\",\n      margin: {\n        top: 70,\n        right: 80,\n        bottom: 40,\n        left: 80\n      },\n      curve: \"linearClosed\",\n      borderWidth: 2,\n      borderColor: {\n        from: 'color'\n      },\n      gridLevels: 5,\n      gridShape: \"circular\",\n      gridLabelOffset: 36,\n      enableDots: true,\n      dotSize: 10,\n      dotColor: {\n        theme: 'background'\n      },\n      dotBorderWidth: 2,\n      dotBorderColor: {\n        from: 'color'\n      },\n      enableDotLabel: true,\n      dotLabel: \"value\",\n      dotLabelYOffset: -12,\n      colors: {\n        scheme: 'nivo'\n      },\n      fillOpacity: 0.25,\n      blendMode: \"multiply\",\n      animate: true,\n      motionStiffness: 90,\n      motionDamping: 15,\n      isInteractive: true,\n      legends: [{\n        anchor: 'top-left',\n        direction: 'column',\n        translateX: -50,\n        translateY: -40,\n        itemWidth: 80,\n        itemHeight: 20,\n        itemTextColor: '#999',\n        symbolSize: 12,\n        symbolShape: 'circle',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemTextColor: '#000'\n          }\n        }]\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), \")\");\n  }\n\n}\n\nexport default Informations;","map":{"version":3,"sources":["/Users/teddyboirin/Desktop/SHERPA/src/components/Informations.js"],"names":["React","ResponsiveRadar","Informations","Component","constructor","props","render","data","top","right","bottom","left","from","theme","scheme","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAO,sBAAP;AACA,OAAO,oBAAP;AACA,SAASC,eAAT,QAAgC,aAAhC;;AACA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEiBC;AAAK;AAFtB,gBAGR,oBAAC,eAAD;AACI,MAAA,IAAI,EAAEA,IADV;AAEI,MAAA,IAAI,EAAE,CAAE,WAAF,EAAe,WAAf,EAA4B,OAA5B,CAFV;AAGI,MAAA,OAAO,EAAC,OAHZ;AAII,MAAA,QAAQ,EAAC,MAJb;AAKI,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OALZ;AAMI,MAAA,KAAK,EAAC,cANV;AAOI,MAAA,WAAW,EAAE,CAPjB;AAQI,MAAA,WAAW,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OARjB;AASI,MAAA,UAAU,EAAE,CAThB;AAUI,MAAA,SAAS,EAAC,UAVd;AAWI,MAAA,eAAe,EAAE,EAXrB;AAYI,MAAA,UAAU,EAAE,IAZhB;AAaI,MAAA,OAAO,EAAE,EAbb;AAcI,MAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAdd;AAeI,MAAA,cAAc,EAAE,CAfpB;AAgBI,MAAA,cAAc,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR,OAhBpB;AAiBI,MAAA,cAAc,EAAE,IAjBpB;AAkBI,MAAA,QAAQ,EAAC,OAlBb;AAmBI,MAAA,eAAe,EAAE,CAAC,EAnBtB;AAoBI,MAAA,MAAM,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OApBZ;AAqBI,MAAA,WAAW,EAAE,IArBjB;AAsBI,MAAA,SAAS,EAAC,UAtBd;AAuBI,MAAA,OAAO,EAAE,IAvBb;AAwBI,MAAA,eAAe,EAAE,EAxBrB;AAyBI,MAAA,aAAa,EAAE,EAzBnB;AA0BI,MAAA,aAAa,EAAE,IA1BnB;AA2BI,MAAA,OAAO,EAAE,CACL;AACIC,QAAAA,MAAM,EAAE,UADZ;AAEIC,QAAAA,SAAS,EAAE,QAFf;AAGIC,QAAAA,UAAU,EAAE,CAAC,EAHjB;AAIIC,QAAAA,UAAU,EAAE,CAAC,EAJjB;AAKIC,QAAAA,SAAS,EAAE,EALf;AAMIC,QAAAA,UAAU,EAAE,EANhB;AAOIC,QAAAA,aAAa,EAAE,MAPnB;AAQIC,QAAAA,UAAU,EAAE,EARhB;AASIC,QAAAA,WAAW,EAAE,QATjB;AAUIC,QAAAA,OAAO,EAAE,CACL;AACIC,UAAAA,EAAE,EAAE,OADR;AAEIC,UAAAA,KAAK,EAAE;AACHL,YAAAA,aAAa,EAAE;AADZ;AAFX,SADK;AAVb,OADK,CA3Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHQ,MADJ;AAyDH;;AAhEqC;;AAyE1C,eAAenB,YAAf","sourcesContent":["import React from 'react';\nimport './Information.scss'\nimport '../style/colors.scss';\nimport '../style/font.scss';\nimport { ResponsiveRadar } from '@nivo/radar'\nclass Informations extends React.Component{\n    constructor(props){\n        super(props);\n    }\n        \n        \n    render(){\n        return(\n            <div className='InformationContainer'>\n              \nconst MyResponsiveRadar = ({ data /* see data tab */ }) => (\n    <ResponsiveRadar\n        data={data}\n        keys={[ 'chardonay', 'carmenere', 'syrah' ]}\n        indexBy=\"taste\"\n        maxValue=\"auto\"\n        margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n        curve=\"linearClosed\"\n        borderWidth={2}\n        borderColor={{ from: 'color' }}\n        gridLevels={5}\n        gridShape=\"circular\"\n        gridLabelOffset={36}\n        enableDots={true}\n        dotSize={10}\n        dotColor={{ theme: 'background' }}\n        dotBorderWidth={2}\n        dotBorderColor={{ from: 'color' }}\n        enableDotLabel={true}\n        dotLabel=\"value\"\n        dotLabelYOffset={-12}\n        colors={{ scheme: 'nivo' }}\n        fillOpacity={0.25}\n        blendMode=\"multiply\"\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        isInteractive={true}\n        legends={[\n            {\n                anchor: 'top-left',\n                direction: 'column',\n                translateX: -50,\n                translateY: -40,\n                itemWidth: 80,\n                itemHeight: 20,\n                itemTextColor: '#999',\n                symbolSize: 12,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n)\n               \n            </div>\n        )\n    }\n\n\n\n\n}\n\n\n\nexport default Informations;"]},"metadata":{},"sourceType":"module"}